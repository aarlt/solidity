name: buildpack:ubuntu2004

on:
  pull_request:
    paths:
      - '.github/workflows/buildpack-ubuntu2004.yml'
      - 'scripts/docker/buildpack/Dockerfile.ubuntu2004'
jobs:
  build:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_DOCKER_REPOSITORY: docker.pkg.github.com/${{ github.repository }}
      IMAGE_NAME: buildpack
      IMAGE_VARIANT: ubuntu2004

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build scripts/docker/${IMAGE_NAME} --file scripts/docker/${IMAGE_NAME}/Dockerfile.$IMAGE_VARIANT --tag $IMAGE_NAME

      - name: Check version
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_ACTOR} --password-stdin
          VERSION=$(docker inspect --format={{.Config.Labels.version}} $IMAGE_NAME)
          docker logout
          echo "::set-env name=VERSION::$VERSION"
          VERSION_EXIST=$(docker pull -q $GITHUB_DOCKER_REPOSITORY/$IMAGE_NAME-$IMAGE_VARIANT:${VERSION} || echo false && true)
          if [ "${VERSION_EXIST}" != "false" ]
          then
            false
          fi

#      - name: Test image
#        run: |
#          docker run -v ${PWD}:/tmp -e CI=1 $IMAGE_NAME /tmp/scripts/build.sh
#
#      - name: Save image
#        run: |
#          docker save -o $IMAGE_NAME-$IMAGE_VARIANT.tar $IMAGE_NAME
#          HASH=$(sha256sum $IMAGE_NAME-$IMAGE_VARIANT.tar | awk '{print $1}')
#          mv $IMAGE_NAME-$IMAGE_VARIANT.tar $IMAGE_NAME-$IMAGE_VARIANT-$HASH
#          echo "::set-env name=HASH::$HASH"
#          echo "::set-env name=ARCHIVE::$IMAGE_NAME-$IMAGE_VARIANT-$HASH"
#
#      - name: Upload image
#        uses: actions/upload-artifact@v2
#        with:
#          name: ${{ env.ARCHIVE }}
#          path: ${{ env.ARCHIVE }}
#
#      - name: Prepare create release issue action
#        uses: actions/setup-node@v1
#        with:
#          node-version: "12.x"
#
#      - name: Building Action
#        run: npm i && npm run build
#        working-directory: ./.github/actions/create-issue
#
#      - name: Create Release Issue
#        uses: ./.github/actions/create-issue
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          action-id: ${{ github.run_id }}
#          package-version: ${{ env.package_version }}
